from unidecode import unidecode
import re

entidades_e_sinonimos = {
  'instituto da usp': ['Escola de Artes, Ciências e Humanidades',
    'Escola de Comunicações e Artes',
    'Escola de Educação Física e Esporte',
    'Escola de Enfermagem',
    'Escola Politécnica',
    'Faculdade de Arquitetura e Urbanismo',
    'Faculdade de Ciências Farmacêuticas',
    'Faculdade de Direito',
    'Faculdade de Economia, Administração e Contabilidade',
    'Faculdade de Educação',
    'Faculdade de Filosofia, Letras e Ciências Humanas',
    'Faculdade de Medicina',
    'Faculdade de Medicina Veterinária e Zootecnia',
    'Faculdade de Odontologia',
    'Faculdade de Saúde Pública',
    'Instituto de Astronomia, Geofísica e Ciências Atmosféricas',
    'Instituto de Biociências',
    'Instituto de Ciências Biomédicas',
    'Instituto de Energia e Ambiente',
    'Instituto de Estudos Avançados',
    'Instituto de Estudos Brasileiros',
    'Instituto de Física',
    'Instituto de Geociências',
    'Instituto de Matemática e Estatística',
    'Instituto de Medicina Tropical de São Paulo',
    'Instituto de Psicologia',
    'Instituto de Química',
    'Instituto de Relações Internacionais',
    'Instituto Oceanográfico',
    'Escola de Educação Física e Esporte de Ribeirão Preto',
    'Escola de Enfermagem de Ribeirão Preto',
    'Faculdade de Ciências Farmacêuticas de Ribeirão Preto',
    'Faculdade de Direito de Ribeirão Preto',
    'Faculdade de Economia, Administração e Contabilidade de Ribeirão Preto',
    'Faculdade de Filosofia, Ciências e Letras de Ribeirão Preto',
    'Faculdade de Medicina de Ribeirão Preto',
    'Faculdade de Odontologia de Ribeirão Preto',
    'Departamento de Engenharia de Minas e Petróleo',
    'Escola de Engenharia de São Carlos',
    'Instituto de Arquitetura e Urbanismo',
    'Instituto de Ciências Matemáticas e de Computação',
    'Instituto de Física de São Carlos',
    'Instituto de Química de São Carlos',
    'Faculdade de Odontologia de Bauru',
    'Escola de Engenharia de Lorena',
    'Escola de Engenharia de Lorena',
    'Escola Superior de Agricultura “Luiz de Queiroz',
    'Faculdade de Zootecnia e Engenharia de Alimentos'
  ],
  'sigla instituto da usp': ['EACH',
    'ECA',
    'EEFE',
    'EE',
    'POLI',
    'FAU',
    'FCF',
    'FD',
    'FEA',
    'FE',
    'FFLCH',
    'FM',
    'FMVZ',
    'FO',
    'FSP',
    'IAG',
    'IB',
    'ICB',
    'IEE',
    'IEA',
    'IF',
    'IGc',
    'IME',
    'IMT',
    'IP',
    'IQ',
    'IRI',
    'IO',
    'FOB',
    'EEL',
    'FZEA',
    'EEFERP',
    'EERP',
    'FCFRP',
    'FDRP',
    'FEARP',
    'FFCLRP',
    'FMRP',
    'FORP',
    'EESC',
    'IAU',
    'ICMC',
    'IFSC',
    'IQSC'
  ],
  'curso da usp': ['Administração',
    'Arquitetura e Urbanismo',
    'Arquitetura',
    'Artes Cênicas',
    'Artes',
    'Astronomia',
    'Audiovisual',
    'Biblioteconomia',
    'Biotecnologia',
    'Ciências Agrárias',
    'Ciências Atuariais',
    'Ciências Biológicas',
    'Biologia',
    'Ciências Biomédicas',
    'Biomedicina',
    'Ciências Contábeis',
    'Contabilidade',
    'Ciência da Computação',
    'Ciências da Natureza',
    'Ciência',
    'Física',
    'Matemática',
    'Química',
    'Ciências Físicas e Biomoleculares',
    'Ciências Sociais',
    'Sociologia',
    'Design',
    'Direito',
    'Ciências Econômicas',
    'Economia',
    'Economia Empresarial e Controladoria',
    'Comunicação',
    'Editoração',
    'Educação Física e Esporte',
    'Educação Física',
    'Educomunicação',
    'Enfermagem',
    'Engenharia Aeronáutica',
    'Engenharia Agronômica',
    'Engenharia Ambiental',
    'Engenharia Bioquímica',
    'Engenharia civil',
    'Engenharia de Alimentos',
    'Engenharia de Biossistemas',
    'Engenharia de Computação',
    'Engenharia de Materiais',
    'Engenharia de Materiais e Manufatura',
    'Engenharia de Minas',
    'Engenharia de Petróleo',
    'Engenharia de Produção',
    'Engenharia Elétrica',
    'Engenharia Física',
    'Engenharia Florestal',
    'Engenharia Mecânica',
    'Engenharia Mecatrônica',
    'Engenharia Metalúrgica',
    'Engenharia Naval',
    'Engenharia Química',
    'Estatística',
    'Farmácia',
    'Filosofia',
    'Física',
    'Fisioterapia',
    'Fonoaudiologia',
    'Geociências e Educação Ambiental',
    'Geofísica',
    'Geografia',
    'Geologia',
    'Gerontologia',
    'Gestão Ambiental',
    'Gestão de Políticas Públicas',
    'História',
    'Informática Biomédica',
    'Jornalismo',
    'Lazer e Turismo',
    'Letras',
    'Marketing',
    'Matemática',
    'Matemática Aplicada',
    'Matemática Aplicada a Negócios',
    'Matemática Aplicada e Computação Científica',
    'Matemática Aplicada e Computacional',
    'Medicina',
    'Medicina Veterinária',
    'Meteorologia',
    'Música',
    'Nutrição',
    'Nutrição e Metabolismo',
    'Obstetrícia',
    'Oceanografia',
    'Odontologia',
    'Pedagogia',
    'Psicologia',
    'Comunicação Social',
    'Publicidade e Propaganda',
    'Química',
    'Relações Internacionais',
    'Relações Públicas',
    'Saúde Pública',
    'Sistemas de Informação',
    'Terapia ocupacional',
    'Têxtil e Moda',
    'Turismo',
    'Zootecnia'
  ],
  'sigla curso da usp': ['adm',
    'biotec',
    'bio',
    'biomed',
    'cont',
    'comp',
    'sanfran',
    'econo',
    'EF',
    'educom',
    'enf',
    'prod',
    'produção',
    'mecânica',
    'mecatrônica',
    'naval',
    'estat',
    'farma',
    'filo',
    'fisio',
    'fono',
    'geo',
    'gpp',
    'hist',
    'info biomed',
    'mat',
    'aplicada computacional',
    'med',
    'med vet',
    'medvet',
    'nutri',
    'odonto',
    'pedago',
    'psico',
    'comunicação',
    'PP',
    'RI',
    'RP'
  ],
  'linguagem de programação': ['python',
    'java',
    'julia',
    'R',
    'C',
    'javascript',
    'SQL'
  ],
  'processo seletivo': ['ps', 'forma de ingresso', 'maneira de entrar', 'PS'],
  'você': ['vc', 'vs', 'voce', 'vose'],
  'vocês': ['vcs', 'voces', 'voses'],
  'falar': ['flar'],
  'fazer': ['fzer','fzr'],
  'também': ['tbm', 'tmb', 'tb', 'tbem'],
  'pode': ['pd', 'pde'],
  'Pós-graduação': ['pós', 'pós grad', 'pós graduação', 'pos graduacao'],
  'quando': ['qnd', 'qd'],
  'para': ['pra', 'p'],
  'como': ['cm'],
  'grupo': ['gp','gpo'],
  'ninguém': ['ngm', 'ng'],
  'Turing USP': ['Turing', 'Grupo Turing', 'Grupo Touring', 'Touring', 'Turin'],
  'processamento de linguagem natural': ['NLP',
    'PLN',
    'Linguística Computacional',
    'Natural language processing'
  ],
  'USP': ['Universidade de São Paulo'],
  'Sibuya': ['sib', 'sibs', 'tibuya', 'tib', 'tibelson'],
  'instagram': ['insta', 'ig'],
  'facebook': ['fb', 'face'],
  'Turing Talks': ['ttalks'],
  'obrigado': ['obrigada',
    'obg',
    'obgd',
    'valeu',
    'vlw',
    'vlws',
    'thanks',
    'salvou',
    'salvo'
  ],
  'YouTube': ['yt', 'you tube','youtube'],
  'área de foco': ['área de estudo', 'campo de estudo', 'área'],
  'Aprendizado por Reforço': ['RL', 'Reinforcement Learning'],
  'Ciência de Dados': ['DS', 'Data Science'],
  'Finanças quantitativas': ['quant', 'quantitative finance']
}

def remove_acentos(dic):
  '''Essa função utiliza a biblioteca Unidecode para fazer uma cópia sem acentos
     de todas palavras acentuadas do dicionário, assim criando uma versão com 
     acento e outra sem, para o caso de alguém enviar uma palavra sem acento, 
     a substituição poder ocorrer da mesma forma.'''
  for chave in dic:
    termos_versao_ascii = [unidecode(termo) for termo in dic[chave]]
    dic[chave] += termos_versao_ascii
    dic[chave] = list(set(dic[chave]))
  
  return dic

def acha_entidades(texto, dicionario):
  '''Essa função leva um texto dado pelo usuário e um dicionário cujas as chaves 
    sejam os termos alvo. Ao encontrar o termo correspondente a uma chave, 
    substitui ele pela chave usando regex. Antes da substituição ela aplica a
    função remove_acentos para gerar um novo dicionário.'''
  novo_dic = remove_acentos(dicionario)
  for chave in novo_dic:
    pattern = r'((\b' + \
              r'\b)|(\b'.join(
                dicionario[chave]) + \
              r'\b))'

    texto = re.sub(pattern, chave, texto, flags=re.IGNORECASE)
    
  return texto
  